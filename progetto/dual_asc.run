reset;
model dual_asc.mod;

#READ FASE
param path {1..5} symbolic;
let path[1] := "./dati/prova.dat";
let path[2] := "./dati/A30-200-1.dat";
let path[3] := "./dati/A60-300-1.dat";
let path[4] := "./dati/A60-300-5.dat";
let path[5] := "./dati/A80-400-5.dat";
param index := 5;

read n, m < (path[index]);
read {i in I} (b[i], f[i]) < (path[index]);
read {j in J} d[j] < (path[index]);
read {i in I, j in J} c[i,j] < (path[index]);
#display f;
#display c;

#DUAL ASCENSION
let {j in J} z[j] := min {i in I} c[i, j];	#INIT Z
#display z;

for {j in J}
{
	let {i in I} zaux[i] := c[i, j] + f[i] -
	sum {k in J: (k != j) and (z[k] > c[i, k])} (z[k] - c[i, k]);
	
	#display zaux;
	let z[j] := min {i in I} zaux[i];
}
#display z;
let bound := sum {j in J} z[j];
display bound;
display _ampl_time;