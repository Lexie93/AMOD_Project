reset;
model dual_asc.mod;

#READ FASE
param path {1..5} symbolic;
let path[1] := "./dati/prova.dat";
let path[2] := "./dati/A30-200-1.dat";
let path[3] := "./dati/A60-300-1.dat";
let path[4] := "./dati/A60-300-5.dat";
let path[5] := "./dati/A80-400-5.dat";
param index := 5;
param value;

read n, m < (path[index]);
read {i in I} (b[i], f[i]) < (path[index]);
read {j in J} d[j] < (path[index]);
read {i in I, j in J} c[i,j] < (path[index]);

for {j in J}
{
	let value:=min {i in I: x[i]=1} c[i, j];
	if (value > min {i in I: x[i]=0} (c[i, j] + f[i])) then
	{
		let value:=min {i in I: x[i]=0} (c[i, j] + f[i]);
		for {i in I: x[i]=0}
		{
			if (value==c[i, j] + f[i]) then
			{
				let x[i]:=1;
				let y[i, j]:=1;
				break;
			}
		}
	}
	else
	{
		for {i in I: x[i]=1}
		{
			if (value==c[i, j]) then
			{
				let y[i, j]:=1;
				break;
			}
		}
	}
}

let bound:=(sum {i in I} (x[i] * f[i])) + (sum {i in I, j in J} (c[i,j] * y[i,j]));

display bound;
display _ampl_time;